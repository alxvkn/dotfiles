# vim:ft=tmux

set -as terminal-features ",*:RGB"

set -g prefix ^a
unbind ^b
bind ^a send-prefix

bind -n F12 run-shell '~/.config/tmux/scripts/passthrough_mode.sh on'

bind u display-popup -E 'tmux capture-pane -Jp | extract_url - | fzy | xargs -I{} browser "{}"'

bind f display-popup -E 'ls ~/code/ | fzy | xargs -I{} ~/.config/tmux/scripts/session_in_dir.sh "$HOME/code/{}"'

bind -n MouseUp1StatusLeft choose-session

set escape-time 0

bind r source ~/.tmux.conf \; display 'reloaded config'

unbind %
unbind \"

# https://github.com/neovim/neovim/issues/21771
bind v split-window -h -c "#{?pane_path,#{pane_path},#{pane_current_path}}"
bind ^v split-window -h -c "#{?pane_path,#{pane_path},#{pane_current_path}}"
bind -n M-v split-window -h -c "#{?pane_path,#{pane_path},#{pane_current_path}}"

bind s split-window -v -c "#{?pane_path,#{pane_path},#{pane_current_path}}"
bind ^s split-window -v -c "#{?pane_path,#{pane_path},#{pane_current_path}}"
bind -n M-s split-window -v -c "#{?pane_path,#{pane_path},#{pane_current_path}}"

bind c new-window -c "#{?pane_path,#{pane_path},#{pane_current_path}}"
bind -n M-c new-window -c "#{?pane_path,#{pane_path},#{pane_current_path}}"

bind N run-shell 'foot tmux new-session -t \#S'

bind -n M-z resize-pane -Z
bind -n M-x kill-pane

bind ' ' display-popup

bind \" choose-session

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

bind -r ^h resize-pane -L
bind -r ^j resize-pane -D
bind -r ^k resize-pane -U
bind -r ^l resize-pane -R

bind -n M-p select-window -t:-1
bind -n M-n select-window -t:+1

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 0

setw -g mode-keys vi
# v to start selection (like in vim)
bind -T copy-mode-vi v send-keys -X begin-selection
# y to copy selection (like in vim)
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel

set -g mouse on

set -g renumber-windows
set -g base-index 1
setw -g pane-base-index 1

set -g status-interval 1

set -Fg @os-icon '-'
set -g @os-color white

if '[ -n "$TERMUX_VERSION" ]' {
    set -g @os-icon 
    set -g @os-color green
}

if 'grep mac /etc/hostname' {
    set -g @os-icon 󰀵
    set -g @os-color white
}

if 'grep vps /etc/hostname' {
    set -g @os-icon 󰒋
    set -g @os-color yellow
}

if '[ -n "$WSL_DISTRO_NAME" ]' {
    set -g @os-icon 󰍲
    set -g @os-color magenta
}

if 'grep toshiba /etc/hostname' {
    set -g @os-icon 󰌢
    set -g @os-color cyan
}

# TODO: set the color and icon in local to machine file???

set -g status-style 'bg=black,fg=#{@os-color}'

set -g status-left-length 30
set -g status-left '#[fg=#{@os-color}]#{?client_prefix,#[reverse],} #{@os-icon} #[default]'
set -ag status-left ' #[underscore]#S#[default] '

# set -g status-right ' #[bold]#{user}#[default]@#h #(clock_icon_from_hour $(date +%H)) #[bold]%H:%M '
set -g status-right ' #[bold]#{user}#[default]@#h #[bold]%H:%M '

set -g window-status-separator ''
set -g window-status-format ' #[bold]#I#[default]: #W #{?window_marked_flag,M,}#{?window_zoomed_flag,Z,}'
set -g window-status-style default

set -g pane-border-lines simple
set -g pane-border-style 'fg=black'
set -g pane-active-border-style 'fg=#{@os-color}'

# TODO: default zoom, activity, silent, marked characters

set -g window-status-current-format '#[reverse] #[bold]#I#[default,reverse]: #W #{?window_marked_flag,M,}#{?window_zoomed_flag,Z,}'

# TODO: menu style
set -g message-style default

set -g window-style 'bg=black,fg=#ffffff'
# LIGHT
if 'case $(gsettings get org.gnome.desktop.interface color-scheme) in *light* | *default*) exit 0 ;; *) exit 1 ;; esac' {
    set -g window-style 'bg=#ffffff,fg=black'
}

set -g set-titles on
