# vim: ft=conf

# Mostly default and self-explanatory

### Modes
# Resize
set $resize_step 30px
mode "resize" {
    bindsym --to-code {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        $left resize shrink width $resize_step
        $down resize grow height $resize_step
        $up resize shrink height $resize_step
        $right resize grow width $resize_step

        # Ditto, with arrow keys
        Left resize shrink width $resize_step
        Down resize grow height $resize_step
        Up resize shrink height $resize_step
        Right resize grow width $resize_step

        # Return to default mode
        Return mode "default"
        Escape mode "default"
    }
}
bindsym --to-code $mod+r mode "resize"

# Pass all keys to active window (for launching other wm's inside sway)
# stolen from https://git.sr.ht/~begs/dotfiles
mode "passthrough" {
    bindsym $mod+Equal mode "default"
}
bindsym $mod+Equal mode "passthrough"

### Workspace stuff
bindsym {
    # You guess it
    $mod+1 workspace number 1
    $mod+2 workspace number 2
    $mod+3 workspace number 3
    $mod+4 workspace number 4
    $mod+5 workspace number 5
    $mod+6 workspace number 6
    $mod+7 workspace number 7
    $mod+8 workspace number 8
    $mod+9 workspace number 9
    $mod+0 workspace number 10

    # Moving focused container to workspace
    $mod+Shift+1 move container to workspace number 1
    $mod+Shift+2 move container to workspace number 2
    $mod+Shift+3 move container to workspace number 3
    $mod+Shift+4 move container to workspace number 4
    $mod+Shift+5 move container to workspace number 5
    $mod+Shift+6 move container to workspace number 6
    $mod+Shift+7 move container to workspace number 7
    $mod+Shift+8 move container to workspace number 8
    $mod+Shift+9 move container to workspace number 9
    $mod+Shift+0 move container to workspace number 10
}

# Workspace cycling with $mod+{,Shift}+Tab
bindsym --to-code {
    $mod+Shift+Tab workspace prev
    $mod+Tab workspace next
}
# Same with $mod+mwheel{up,down}
bindsym --whole-window {
    $mod+button4 workspace prev
    $mod+button5 workspace next
}

### Layout stuff
bindsym --to-code {
    # Moving focus with arrow and vim direction keys
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right
    $mod+Left focus left
    $mod+Down focus down
    $mod+Up focus up
    $mod+Right focus right

    # Moving focused window with arrow and vim direction keys
    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right
    $mod+Shift+Left move left
    $mod+Shift+Down move down
    $mod+Shift+Up move up
    $mod+Shift+Right move right

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    $mod+b splith
    $mod+v splitv
    $mod+c split none # cancel any of the above for current focus

    # Switch the current container between different layout styles
    $mod+s layout stacking
    $mod+w layout tabbed
    $mod+e layout toggle split

    # Make the current focus fullscreen
    $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    $mod+space focus mode_toggle


    # So uhm scratchpad
    $mod+Shift+minus move scratchpad
    $mod+minus scratchpad show

    # Move focus to the parent container
    $mod+a focus parent

    # Move focus to the child container
    $mod+z focus child

    # Kill focused container
    $mod+q kill
}

# Move and resize windows with mouse by holding $mod
floating_modifier $mod normal



# Reload config
bindsym --to-code $mod+Shift+c reload

# Switch to one of keyboard layouts
set {
    $set_en_kb input type:keyboard xkb_switch_layout 0
    $set_ru_kb input type:keyboard xkb_switch_layout 1
}
bindsym --to-code {
    $mod+i $set_en_kb
    $mod+o $set_ru_kb
}


### I honestly don't now how to name this section
bindsym --to-code {
    # Lock
    $mod+Shift+Return $set_en_kb; exec swaylock

    # Application launcher
    $mod+d $set_en_kb; exec $launcher

    # Terminal
    $mod+Return exec $term

    # Htop
    $mod+Escape exec $term -e htop

    # Uhh
    XF86PowerOff exec chromium

    # Editor
    $mod+n exec $term -e $EDITOR

    # neovide
    $mod+Shift+n exec neovide

    # Open tui mixer
    $mod+F9 exec $term -e pulsemixer

    # Screenshots
    Print exec "~/scripts/screenshot.sh"
    $mod+Print exec "~/scripts/screenshot.sh -a"

    # Volume control bindings
    $mod+F12 exec pactl set-sink-volume 0 +5%
    $mod+F11 exec pactl set-sink-volume 0 -5%
    $mod+F10 exec pactl set-sink-mute 0 toggle

    # MPRIS2
    $mod+F1 exec playerctl play-pause
    $mod+F2 exec playerctl position 5-
    $mod+F3 exec playerctl position 5+
}
