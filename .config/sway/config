### Variables
set {
    # Logo key
    $mod Mod4

    # Home row direction keys, like vim
    $left h
    $down j
    $up k
    $right l

    # Terminal emulator
    $term $TERMINAL

    # Application launcher
    # Pass the final command to swaymsg so that the resulting window can be opened
    # on the original workspace that the command was run on.
    $launcher menu_path | fuzzel -dp 'run> ' | xargs swaymsg exec --

    # General purpose menu
    $menu fuzzel -d
}

### Input
# Keyboard
input * {
    xkb_numlock enable
    xkb_layout us,ru
    xkb_options grp:alt_shift_toggle,caps:swapescape
}

# Mouse
input type:pointer {
    accel_profile flat
    pointer_accel -0.4
}

# hide mouse cursor when anything is pressed on keyboard
seat * hide_cursor when-typing enable



### Appearance
# Font
font FiraCode 10

# Colors
include "$HOME/.cache/wal/colors-sway"
set {
    $bg $background
    $fg $foreground
}

# class                 border  bg      text    indicator   child_border
client.focused          #aaaaaa $bg     $fg     #aaaaaa     #aaaaaa
client.focused_inactive $bg     $bg     #aaaaaa
client.unfocused        $bg     $bg     #aaaaaa

# Borders
smart_borders on
default_border pixel 1
default_floating_border normal 1

# Wallpaper
output * bg $wallpaper fill



# Bar
bar main {
    # status_command ~/dev/bstatus/main.py
    status_command SCRIPT_DIR=~/.config/i3blocks/blocks i3blocks
    separator_symbol ' î‚³ '
    position bottom

    workspace_min_width 24

    colors {
        background          $bg
        statusline          $fg

        #                   border  bg      text
        focused_workspace   $fg     $fg     $bg
        inactive_workspace  $bg     $bg     #aaaaaa
    }
}

include {
    # Fix for gtk apps waiting for xdg_desktop_portal to be started through dbus is
    # implemented in /etc/sway/config.d/50-systemd-user.conf
    # Since waybar uses gtk, you probably should include system configs before you start it
    /etc/sway/config.d/*
}

include {
    binds

    # machine-local settings, which make no sense lying on dotfiles repo
    # e.g. monitor setup
    local/*
}

# open mixer as floating window ./binds:189
for_window [app_id=pulsemixer] {
    floating enable
    sticky enable
    resize set {
        height 30 ppt
        width 40 ppt
    }
    move position 58 ppt 68 ppt
}

exec swayidle before-sleep swaylock

### Autostart
exec {
    # waybar

    # Sway's "exec" command has one not that much documented feature:
    #   If exact process that was started with it creates a window
    #   then the window will be placed on workspace that was focused when it was called
    # And if line starting foot server looks like this:
    #       exec foot --server
    # This creates unpleasant situation with
    # first (after sway startup) footclient window always
    # being created on the first workspace,
    # no matter which one is focused at the moment.
    # With all this in mind we can just append and ampersand
    foot --server &
}
